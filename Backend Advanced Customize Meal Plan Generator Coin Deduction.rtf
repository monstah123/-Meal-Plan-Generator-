{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Backend: Handle user points balance and OpenAI generation\
\
// Function to return the user's balance\
function get_user_points_balance() \{\
    if (is_user_logged_in()) \{\
        $user_id = get_current_user_id();\
        $balance = mycred_get_users_balance($user_id);  // Assuming myCRED is used\
        wp_send_json_success($balance);\
    \} else \{\
        wp_send_json_error('Not logged in');\
    \}\
    wp_die();\
\}\
\
// Register AJAX actions for fetching the user's points\
add_action('wp_ajax_get_user_points_balance', 'get_user_points_balance');\
add_action('wp_ajax_nopriv_get_user_points_balance', 'get_user_points_balance');\
\
// Function to handle OpenAI generation and point deduction\
if (!function_exists('openai_generate_points')) \{\
    function openai_generate_points() \{\
        // Get the topic from the AJAX request\
        $topic = isset($_POST['prompt']) ? sanitize_text_field($_POST['prompt']) : '';\
        $prompt = "Generate a customized diet about " . $topic;\
\
        // Check if the user is logged in\
        if (!is_user_logged_in()) \{\
            wp_send_json("LOGIN_FIRST");\
        \}\
\
        // Check if the user has enough balance\
        $user_id = get_current_user_id();\
        $balance = mycred_get_users_balance($user_id);\
        if ($balance < 3) \{\
            wp_send_json("NO_BALANCE");\
        \}\
\
        // Deduct 1 point for the generation\
        mycred_subtract("Hook Generator", $user_id, 1, 'Token deduction for using hook Generation', time());\
\
        // OpenAI API setup\
        $api_url = 'https://api.openai.com/v1/chat/completions';\
        $api_key = ' ';  // Replace with your actual OpenAI API key\
\
        $headers = [\
            'Content-Type' => 'application/json',\
            'Authorization' => 'Bearer ' . $api_key\
        ];\
\
        $body = [\
            'model' => 'gpt-3.5-turbo',\
            'messages' => [['role' => 'user', 'content' => $prompt]],\
            'temperature' => 0.7\
        ];\
\
        $args = [\
            'method' => 'POST',\
            'headers' => $headers,\
            'body' => json_encode($body),\
            'timeout' => 120\
        ];\
\
        // Send the request to the OpenAI API\
        $response = wp_remote_request($api_url, $args);\
\
        if (is_wp_error($response)) \{\
            $error_message = $response->get_error_message();\
            wp_send_json_error("Something went wrong: $error_message");\
        \} else \{\
            $body = wp_remote_retrieve_body($response);\
            $data = json_decode($body, true);\
            if (json_last_error() !== JSON_ERROR_NONE) \{\
                wp_send_json_error('Invalid JSON in API response');\
            \} elseif (!isset($data['choices'])) \{\
                wp_send_json_error('API request failed. Response: ' . $body);\
            \} else \{\
                // After successful generation, send new balance back to the frontend\
                $new_balance = mycred_get_users_balance($user_id);  // Get updated balance after deduction\
                $response_data = [\
                    'openai_response' => $data,\
                    'new_balance' => $new_balance  // Include new balance\
                ];\
                wp_send_json_success($response_data);\
            \}\
        \}\
\
        wp_die(); // Always call wp_die() in an AJAX handler\
    \}\
\}\
\
add_action('wp_ajax_openai_generate_points', 'openai_generate_points');\
add_action('wp_ajax_nopriv_openai_generate_points', 'openai_generate_points');\
}